<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>推荐几个实用或好玩的js脚本</title>
      <link href="/javascript/Fun-JS-scripts/"/>
      <url>/javascript/Fun-JS-scripts/</url>
      
        <content type="html"><![CDATA[<p>简单的几个脚本,不像TamperMonkey那样强植入, 也无需安装浏览器扩展插件.</p><a id="more"></a><h3 id="脚本列表"><a href="#脚本列表" class="headerlink" title="脚本列表"></a>脚本列表</h3><p><strong>如果未来有新脚本, 会陆续在这里更新.</strong><br><em>具体使用方法在页面底部</em></p><ol><li>解除网页禁止复制的限制（同时去除复制内容末尾自动附加的额外小尾巴信息<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">window</span>.oncontextmenu=<span class="built_in">document</span>.oncontextmenu=<span class="built_in">document</span>.oncopy=<span class="literal">null</span>; [...document.querySelectorAll(<span class="string">'body'</span>)].forEach(<span class="function"><span class="params">dom</span> =&gt;</span> dom.outerHTML = dom.outerHTML); [...document.querySelectorAll(<span class="string">'body, body *'</span>)].forEach(<span class="function"><span class="params">dom</span> =&gt;</span> &#123;[<span class="string">'onselect'</span>, <span class="string">'onselectstart'</span>, <span class="string">'onselectend'</span>, <span class="string">'ondragstart'</span>, <span class="string">'ondragend'</span>, <span class="string">'oncontextmenu'</span>, <span class="string">'oncopy'</span>].forEach(<span class="function"><span class="params">ev</span> =&gt;</span> dom.removeAttribute(ev)); dom.style[<span class="string">'user-select'</span>]=<span class="string">'auto'</span>;&#125;);</span><br></pre></td></tr></table></figure></li><li>密码输入框明文显示（方便查看被浏览器记住但自己已经忘了的密码）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:[...document.querySelectorAll(<span class="string">'input[type=password]'</span>)].forEach(<span class="function"><span class="params">i</span> =&gt;</span> i.type = <span class="string">'text'</span>);</span><br></pre></td></tr></table></figure></li><li>给网页内所有元素添加随机颜色外框线<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:[...document.querySelectorAll(<span class="string">'*'</span>)].forEach(<span class="function"><span class="params">i</span> =&gt;</span> &#123; <span class="keyword">let</span> rand = (~~(<span class="built_in">Math</span>.random() * <span class="number">0xFFFFFF</span>)).toString(<span class="number">16</span>); rand = <span class="string">'#'</span> + (<span class="string">'00000'</span> + rand).slice(<span class="number">-6</span>); i.style.outline = <span class="string">'1px solid '</span> + rand; &#125;);</span><br></pre></td></tr></table></figure></li><li>点击页面随机出现向上浮动并淡出的小字<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="function">(<span class="params">(</span>)=&gt;</span>&#123;<span class="keyword">if</span>(<span class="built_in">document</span>.querySelector(<span class="string">'#clickAnimation_'</span>)) <span class="keyword">return</span>; <span class="keyword">var</span> rand=<span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="keyword">var</span> arr=[<span class="string">'富强'</span>, <span class="string">'民主'</span>, <span class="string">'文明'</span>, <span class="string">'和谐'</span>, <span class="string">'自由'</span>, <span class="string">'平等'</span>, <span class="string">'公正'</span>, <span class="string">'法治'</span>, <span class="string">'爱国'</span>, <span class="string">'敬业'</span>, <span class="string">'诚信'</span>, <span class="string">'友善'</span>]; <span class="keyword">return</span> arr[~~<span class="function">(<span class="params"><span class="built_in">Math</span>.random(</span>)*<span class="params">arr</span>.<span class="params">length</span>)];&#125;; <span class="params">var</span> <span class="params">s</span>=<span class="params">document</span>.<span class="params">createElement</span>(<span class="params"><span class="string">'style'</span></span>); <span class="params">s</span>.<span class="params">id</span>='<span class="params">clickAnimation_</span>'; <span class="params">s</span>.<span class="params">innerText</span>='.<span class="params">click</span>-<span class="params">elem</span>-<span class="params">t</span> &#123;<span class="params">position</span>: <span class="params">absolute</span>; <span class="params">z</span>-<span class="params">index</span>: 9999; <span class="params">color</span>: #<span class="params">f5871f</span>; <span class="params">font</span>-<span class="params">size</span>: 15<span class="params">px</span>; <span class="params">font</span>-<span class="params">weight</span>: <span class="params">bold</span>; <span class="params">cursor</span>: <span class="params">default</span>; <span class="params">user</span>-<span class="params">select</span>: <span class="params">none</span>; <span class="params">animation</span>: <span class="params">floatAndGone</span> 1.7<span class="params">s</span> <span class="params">forwards</span>;&#125; @<span class="params">keyframes</span> <span class="params">floatAndGone</span> &#123;<span class="params">from</span> &#123;<span class="params">transform</span>: <span class="params">translateY</span>(<span class="params"><span class="number">0</span></span>); <span class="params">opacity</span>: 1;&#125; <span class="params">to</span> &#123;<span class="params">transform</span>: <span class="params">translateY</span>(<span class="params"><span class="number">-75</span>px</span>); <span class="params">opacity</span>: 0;&#125;&#125;'; <span class="params">document</span>.<span class="params">querySelector</span>(<span class="params"><span class="string">'head'</span></span>).<span class="params">appendChild</span>(<span class="params">s</span>); <span class="params">document</span>.<span class="params">body</span>.<span class="params">addEventListener</span>(<span class="params"><span class="string">'click'</span>, e=&gt;&#123;<span class="keyword">var</span> dom=<span class="built_in">document</span>.createElement(<span class="string">'span'</span></span>); <span class="params">dom</span>.<span class="params">innerText</span>=<span class="params">rand</span><span class="params">()</span>; <span class="params">dom</span>.<span class="params">className</span>='<span class="params">click</span>-<span class="params">elem</span>-<span class="params">t</span>'; <span class="params">dom</span>.<span class="params">style</span>.<span class="params">top</span>=<span class="params">e</span>.<span class="params">pageY</span>-25+'<span class="params">px</span>'; <span class="params">dom</span>.<span class="params">style</span>.<span class="params">left</span>=<span class="params">e</span>.<span class="params">pageX</span>+'<span class="params">px</span>'; <span class="params">document</span>.<span class="params">body</span>.<span class="params">appendChild</span>(<span class="params">dom</span>); <span class="params">setTimeout</span>(<span class="params">(</span>)=&gt;</span>&#123;<span class="built_in">document</span>.body.removeChild(dom)&#125;, <span class="number">2200</span>) &#125;);&#125;)();</span><br></pre></td></tr></table></figure></li><li>解除所有按钮的禁用状态<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:[...document.querySelectorAll(<span class="string">'input[type=button], button'</span>)].forEach(<span class="function"><span class="params">i</span> =&gt;</span> i.removeAttribute(<span class="string">'disabled'</span>));</span><br></pre></td></tr></table></figure></li><li>解除所有文本输入框/单选框/复选框的只读和禁用状态<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:[...document.querySelectorAll(<span class="string">'textarea, input'</span>)].forEach(<span class="function"><span class="params">i</span> =&gt;</span> &#123; i.removeAttribute(<span class="string">'disabled'</span>); i.removeAttribute(<span class="string">'readonly'</span>) &#125;);</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果你想要其他脚本，在评论区回复吧.</p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><em>以下三种方法可任选其一</em></p><ol><li><p>直接复制脚本代码，然后粘贴浏览器的地址栏，然后回车确定（chrome浏览器会去掉前面的 <code>javascript</code> 字母，需要手动加上，部分浏览器的地址栏可能不支持输入脚本）。（如果你想快速体验，可选择这一种）</p></li><li><p>复制脚本代码，然后新建浏览器书签，将代码粘贴到网址的输入框内，名字自己定义，然后保存。打开你需要操作的网页，然后再点击选择此书签。ok！（如果你以后也有使用的需求，可选择这一种）</p></li><li><p>如果你会一点前端调试功能，可以直接打开网页的console，(chrome按F12键或右键页面任意处然后选择检查)。将复制的代码粘贴到console里，然后回车执行。（你想装逼？选择这种吧）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无版权图片网站大推荐[搬运]</title>
      <link href="/no-copyright-image-website/"/>
      <url>/no-copyright-image-website/</url>
      
        <content type="html"><![CDATA[<p>无论是写文章、做 PPT 还是找壁纸、换头像，搜图片都是件费时却最出效果的事情。之前小美给大家分享了最好用无版权图片网站之一的 Pixabay，不过图片素材这种东西，尤其是可自由修改使用的图片素材，向来是嫌少不嫌多的。所以这次，小美就把私藏的 60 余家无版权图片网站分享给大家，这家找不到合适的图片？没关系，下一家就有了！从此再也不会被找图这件事情所束缚。</p><a id="more"></a><p>本次推荐分为第一找图梯队、第二找图梯队、精准找图、分门别类找图、备选方案以及最后的终极找图梯队组成。</p><h2 id="第一找图梯队"><a href="#第一找图梯队" class="headerlink" title="# 第一找图梯队"></a># 第一找图梯队</h2><p>根据二八定律，80% 的结果可能来自于 20% 的原因。这在找图片这件事上也适用。虽然这次推荐的无版权图片网站有数十家，但是真正好用的也是只有一部分，而这一部分就足够使用了。</p><h3 id="Unsplash"><a href="#Unsplash" class="headerlink" title="## Unsplash"></a>## <a href="https://unsplash.com/" target="_blank" rel="noopener">Unsplash</a></h3><p>最知名的无版权图片网站，这家以风景为主，数量足够多，但是很多滤镜感太强，颜色太过厚重，比较适合做壁纸，事实上很多壁纸软件也是直接从这上面下载的图。<br><img src="https://ftp.bmp.ovh/imgs/2020/09/625c5797e3704f0f.png" alt=""></p><h3 id="Pixabay"><a href="#Pixabay" class="headerlink" title="## Pixabay"></a>## <a href="https://pixabay.com/" target="_blank" rel="noopener">Pixabay</a></h3><p>小美最常用的一家，可以说是全球最大的免费图片网站了。图多而且种类足够丰富。这其实也是一家集合网站，可以看到 Unsplash 家的很多图也能在 Pixabay 里搜到。<br><img src="https://ftp.bmp.ovh/imgs/2020/09/32442997fd06a0ea.png" alt=""></p><h3 id="Pexels"><a href="#Pexels" class="headerlink" title="## Pexels"></a>## <a href="https://www.pexels.com/" target="_blank" rel="noopener">Pexels</a></h3><p>这家也有很多精美的图片，而且比较好的一点是会有「一周精选」，平常没事的时候来收收图也挺好的。<br><img src="https://ftp.bmp.ovh/imgs/2020/09/a167e20f04cd61d4.png" alt=""></p><h3 id="visualhunt"><a href="#visualhunt" class="headerlink" title="## visualhunt"></a>## <a href="https://visualhunt.com/" target="_blank" rel="noopener">visualhunt</a></h3><p>数量超级多的无版权图片网站，可以根据颜色进行搜索。<br><img src="https://ftp.bmp.ovh/imgs/2020/09/80a7148d66cfa879.png" alt=""></p><h2 id="第二找图梯队"><a href="#第二找图梯队" class="headerlink" title="# 第二找图梯队"></a># 第二找图梯队</h2><p>TODO</p>]]></content>
      
      
      <categories>
          
          <category> photo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unsplash </tag>
            
            <tag> copyright </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode 插件推荐</title>
      <link href="/recommended-vscode-plugin/"/>
      <url>/recommended-vscode-plugin/</url>
      
        <content type="html"><![CDATA[<p class='p center logo large'>VSCode Plugin</p><a id="more"></a><h2 id="提效类插件"><a href="#提效类插件" class="headerlink" title="提效类插件"></a>提效类插件</h2><h3 id="Bracket-Pair-Colorizer-快速定位括号"><a href="#Bracket-Pair-Colorizer-快速定位括号" class="headerlink" title="Bracket Pair Colorizer (快速定位括号)"></a>Bracket Pair Colorizer (快速定位括号)</h3>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript学习(1)-基础类型</title>
      <link href="/typescript/typescript-learning-1/"/>
      <url>/typescript/typescript-learning-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习资源为<a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener">TypeScript中文网</a></p></blockquote><p>为了方便，无特殊说明，以下的<code>js</code>表示 JavaScript，<code>ts</code>表示TypeScript</p><a id="more"></a><h3 id="基础类型"><a href="#基础类型" class="headerlink" title="基础类型"></a>基础类型</h3><p>基础类型包括 <code>boolean</code>,<code>number</code>,<code>string</code>,<code>数组</code>,<code>元组</code>,<code>enum</code>,<code>any</code>,<code>void</code>,<code>null</code>,<code>undefined</code>.<code>never</code>,<code>object</code>.<br>使用方法</p><figure class="highlight typescript"><figcaption><span>typescript</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 变量:数据类型</span></span><br><span class="line"><span class="keyword">let</span> a: <span class="built_in">number</span> = <span class="number">1</span> <span class="comment">// 数字</span></span><br><span class="line"><span class="keyword">let</span> b: <span class="built_in">string</span> = <span class="string">'string'</span> <span class="comment">// 字符串</span></span><br><span class="line"><span class="keyword">let</span> c: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">let</span> d: [<span class="built_in">number</span>,<span class="built_in">string</span>] = [<span class="number">1</span>,<span class="string">'hello world'</span>] <span class="comment">// 元组</span></span><br></pre></td></tr></table></figure><h4 id="布尔值-boolean"><a href="#布尔值-boolean" class="headerlink" title="布尔值 boolean"></a>布尔值 boolean</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isTrue: <span class="built_in">boolean</span> = <span class="literal">true</span> <span class="comment">// 只能true、false两个值</span></span><br></pre></td></tr></table></figure><h4 id="数字-number"><a href="#数字-number" class="headerlink" title="数字 number"></a>数字 number</h4><p>ts始于js，所以ts中的所有数字都是浮点数，类型为<code>number</code>。除了支持十进制和十六进制字面量，ts还支持es6中引入的二进制和八进制字面量</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> decLiteral: <span class="built_in">number</span> = <span class="number">6</span>; <span class="comment">// 十进制</span></span><br><span class="line"><span class="keyword">let</span> hexLiteral: <span class="built_in">number</span> = <span class="number">0xf00d</span>; <span class="comment">// 十六进制 0x 数字0+小写字母x</span></span><br><span class="line"><span class="keyword">let</span> binaryLiteral: <span class="built_in">number</span> = <span class="number">0b1010</span>; <span class="comment">// 二进制 0b</span></span><br><span class="line"><span class="keyword">let</span> octalLiteral: <span class="built_in">number</span> = <span class="number">0o744</span>; <span class="comment">// 八进制 0o 字母o</span></span><br></pre></td></tr></table></figure><h4 id="字符串-string"><a href="#字符串-string" class="headerlink" title="字符串 string"></a>字符串 string</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nickname: <span class="built_in">string</span> = <span class="string">'chenuai'</span></span><br><span class="line"><span class="keyword">let</span> age: <span class="built_in">number</span> = <span class="number">26</span></span><br><span class="line"><span class="keyword">let</span> hello: <span class="built_in">string</span> = <span class="string">'hello, my name is '</span> + nickname + <span class="string">', I am '</span> + age + <span class="string">'years old.'</span></span><br><span class="line"><span class="keyword">let</span> hello1: <span class="built_in">string</span> = <span class="string">`hello, my name is <span class="subst">$&#123;nickname&#125;</span>, I am <span class="subst">$&#123;age&#125;</span> years old.`</span> <span class="comment">// es6写法</span></span><br></pre></td></tr></table></figure><h4 id="数组"><a href="#数组" class="headerlink" title="数组 []"></a>数组 []</h4><p>ts表示数组有两种方式<br>1.元素类型后面加<code>[]</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list: <span class="built_in">string</span>[] = [<span class="string">'chenuai'</span>,<span class="string">'hello world'</span>]</span><br><span class="line"><span class="keyword">let</span> list2: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>2.使用数组泛型,之后讲解什么是泛型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list: <span class="built_in">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>]</span><br></pre></td></tr></table></figure><h4 id="元组-Tuple"><a href="#元组-Tuple" class="headerlink" title="元组(Tuple)"></a>元组(Tuple)</h4><p>元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。 比如，你可以定义一对值分别为 <code>string</code>和<code>number</code>类型的元组</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test: [<span class="built_in">number</span>,<span class="built_in">string</span>,<span class="built_in">boolean</span>] = [<span class="number">27</span>,<span class="string">'chenuai'</span>,<span class="literal">false</span>] </span><br><span class="line"><span class="keyword">let</span> userinfo: [<span class="built_in">string</span>,<span class="built_in">number</span>] = [<span class="string">'chenuai'</span>,<span class="number">27</span>] </span><br><span class="line"><span class="comment">// Error : userinfo[1] = ['chenwuai'] // 必须和定义的顺序一样</span></span><br><span class="line"><span class="comment">// 但是如果出现数组越界的情况，越界元素值必须是(string|number)类型</span></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line">userinfo[<span class="number">2</span>] = <span class="string">'第三个元素'</span> <span class="comment">// true</span></span><br><span class="line">userinfo[<span class="number">3</span>] = <span class="number">4</span> <span class="comment">// true</span></span><br><span class="line">userinfo[<span class="number">5</span>] = <span class="literal">true</span> <span class="comment">// error 此处错误，因为布尔值不是string或者number类型</span></span><br><span class="line"><span class="comment">// 此处牵扯联合类型，之后讲解。</span></span><br></pre></td></tr></table></figure><h4 id="枚举-enum"><a href="#枚举-enum" class="headerlink" title="枚举 enum"></a>枚举 enum</h4><p><code>enum</code>类型是对js标准数据类型的一个补充。 像C#等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> Color &#123;Red, Green, Blue&#125; <span class="comment">// 默认从0开始编号</span></span><br><span class="line"><span class="keyword">enum</span> videoStatus = &#123; connect = <span class="number">1</span>, play, pause, stop &#125; <span class="comment">// 默认从1开始编号</span></span><br><span class="line"><span class="keyword">enum</span> videoType = &#123; mp4, flv = <span class="number">2</span>, hls = <span class="number">4</span>, rtsp &#125; <span class="comment">// 默认从0开始，flv为2，hls为4， rtsp没有手动设置值，则它为上一个元素的值+1，所以为5</span></span><br></pre></td></tr></table></figure><p>枚举类型提供的一个便利是你可以由枚举的值得到它的名字。<br>例如，我们知道颜色数值为2，但是不确定它映射到Color里的哪个名字，我们可以查找相应的名字：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> colorName: <span class="built_in">string</span> = Color[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">console</span>.log(colorName) <span class="comment">// blue 因为在Color的枚举里面，blue对应的值为2</span></span><br></pre></td></tr></table></figure><h4 id="Any"><a href="#Any" class="headerlink" title="Any"></a>Any</h4><p>有时候，我们会想要为那些在编程阶段还不清楚类型的变量指定一个类型。 这些值可能来自于动态的内容，比如来自用户输入或第三方代码库。 这种情况下，我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查。 那么我们可以使用<code>any</code>类型来标记这些变量</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 刚开始学ts时，如果不清楚使用什么类型，可以使用any，</span></span><br><span class="line"><span class="keyword">let</span> notSure: <span class="built_in">any</span> = <span class="number">4</span>;</span><br><span class="line">notSure = <span class="string">"maybe a string instead"</span>;</span><br><span class="line">notSure = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>在对现有代码进行改写的时候，<code>any</code>类型是十分有用的，它允许你在编译时可选择地包含或移除类型检查。 你可能认为<code>Object</code>类型（见下方Object）有相似的作用，就像它在其它语言中那样。 但是<code>Object</code>类型的变量只是允许你给它赋任意值 - 但是却不能够在它上面调用任意的方法，即便它真的有这些方法：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> notSure: <span class="built_in">any</span> = <span class="number">4</span>;</span><br><span class="line">notSure.ifItExists(); <span class="comment">// okay, 在运行时，ifItExists方法可能存在</span></span><br><span class="line">notSure.toFixed(); <span class="comment">// okay, toFixed方法存在</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> prettySure: <span class="built_in">Object</span> = <span class="number">4</span>;</span><br><span class="line">prettySure.toFixed(); <span class="comment">// Error: Property 'toFixed' doesn't exist on type 'Object'. 属性toFixed 不存在</span></span><br></pre></td></tr></table></figure><p>当你只知道一部分数据的类型时，<code>any</code>类型也是有用的。 比如，你有一个数组，它包含了不同的类型的数据：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list: <span class="built_in">any</span>[] = [<span class="number">1</span>, <span class="literal">true</span>, <span class="string">"free"</span>];</span><br><span class="line">list[<span class="number">1</span>] = <span class="number">100</span>;</span><br></pre></td></tr></table></figure><h4 id="Void"><a href="#Void" class="headerlink" title="Void"></a>Void</h4><p>某种程度上来说，<code>void</code>类型像是与<code>any</code>类型相反，它表示没有任何类型。 当一个函数没有返回值时，你通常会见到其返回值类型是 <code>void</code>：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">warnUser</span>(<span class="params"></span>): <span class="title">void</span> </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"This is my warning message"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 声明一个void类型的变量没有什么大用，因为你只能为它赋予undefined和null：</span></span><br><span class="line"><span class="keyword">let</span> unusable: <span class="built_in">void</span> = <span class="literal">undefined</span>;</span><br></pre></td></tr></table></figure><h4 id="Null-和-Undefined"><a href="#Null-和-Undefined" class="headerlink" title="Null 和 Undefined"></a>Null 和 Undefined</h4><p>ts里，<code>undefined</code>和<code>null</code>两者各自有自己的类型分别叫做<code>undefined</code>和<code>null</code>。 和 <code>void</code>相似，它们的本身的类型用处不是很大：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> u: <span class="literal">undefined</span> = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">let</span> n: <span class="literal">null</span> = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p>默认情况下<code>null</code>和<code>undefined</code>是所有类型的子类型。 就是说你可以把 <code>null</code>和<code>undefined</code>赋值给<code>number</code>类型的变量。<br>然而，当你指定了<code>--strictNullChecks</code>标记，<code>null</code>和<code>undefined</code>只能赋值给<code>void</code>和它们各自。 这能避免 很多常见的问题。 也许在某处你想传入一个 <code>string</code>或<code>null</code>或<code>undefined</code>，你可以使用联合类型<code>string | null | undefined</code>。为了避免常见问题，尽可能的使用 <code>--strictNullChecks</code></p><h4 id="Never"><a href="#Never" class="headerlink" title="Never"></a>Never</h4><p><code>never</code>类型表示的是那些永不存在的值的类型。 例如， <code>never</code>类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型； 变量也可能是 <code>never</code>类型，当它们被永不为真的类型保护所约束时。</p><p>never类型是任何类型的子类型，也可以赋值给任何类型；然而，没有类型是<code>never</code>的子类型或可以赋值给<code>never</code>类型（除了<code>never</code>本身之外）。 即使 <code>any</code>也不可以赋值给<code>never</code>。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回never的函数必须存在无法达到的终点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">message: <span class="built_in">string</span></span>): <span class="title">never</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推断的返回值类型为never</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fail</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> error(<span class="string">"Something failed"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回never的函数必须存在无法达到的终点</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">infiniteLoop</span>(<span class="params"></span>): <span class="title">never</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h4><p><code>object</code>表示非原始类型，也就是除<code>number</code>，<code>string</code>，<code>boolean</code>，<code>symbol</code>，<code>null</code>或<code>undefined</code>之外的类型。<br>使用<code>object</code>类型，就可以更好的表示像Object.create这样的API。例如：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params">o: object | <span class="literal">null</span></span>): <span class="title">void</span></span>;</span><br><span class="line"></span><br><span class="line">create(&#123; prop: <span class="number">0</span> &#125;); <span class="comment">// OK</span></span><br><span class="line">create(<span class="literal">null</span>); <span class="comment">// OK</span></span><br><span class="line"></span><br><span class="line">create(<span class="number">42</span>); <span class="comment">// Error</span></span><br><span class="line">create(<span class="string">"string"</span>); <span class="comment">// Error</span></span><br><span class="line">create(<span class="literal">false</span>); <span class="comment">// Error</span></span><br><span class="line">create(<span class="literal">undefined</span>); <span class="comment">// Error</span></span><br></pre></td></tr></table></figure><h3 id="类型断言"><a href="#类型断言" class="headerlink" title="类型断言"></a>类型断言</h3><p>有时候你会遇到这样的情况，你会比ts更了解某个值的详细信息。 通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型。</p><p>通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。 类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 ts会假设你，程序员，已经进行了必须的检查。</p><p>类型断言有两种形式。 其一是“尖括号”语法：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> someValue: <span class="built_in">any</span> = <span class="string">"this is a string"</span>;</span><br><span class="line"><span class="keyword">let</span> strLength: <span class="built_in">number</span> = (&lt;<span class="built_in">string</span>&gt;someValue).length;</span><br></pre></td></tr></table></figure><p>另一个为<code>as</code>语法：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> someValue: <span class="built_in">any</span> = <span class="string">"this is a string"</span>;</span><br><span class="line"><span class="keyword">let</span> strLength: <span class="built_in">number</span> = (someValue <span class="keyword">as</span> <span class="built_in">string</span>).length;</span><br></pre></td></tr></table></figure><p>两种形式是等价的。 至于使用哪个大多数情况下是凭个人喜好；然而，当你在ts里使用<code>JSX</code>时，只有 <code>as</code>语法断言是被允许的。</p>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx开启gzip和缓存</title>
      <link href="/enable-nginx-gzip-and-cache/"/>
      <url>/enable-nginx-gzip-and-cache/</url>
      
        <content type="html"><![CDATA[<h3 id="极简配置"><a href="#极简配置" class="headerlink" title="极简配置"></a>极简配置</h3><p>在站点的配置文件中(例如<code>website.conf</code>)的server中添加<code>gzip on</code>.</p><a id="more"></a><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常规配置"><a href="#常规配置" class="headerlink" title="常规配置"></a>常规配置</h3><p>按照下面代码进行配置</p><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  <span class="attribute">gzip</span> <span class="literal">on</span>; <span class="comment"># 是否开启gzip</span></span><br><span class="line">  <span class="attribute">gzip_buffers</span> <span class="number">32</span> <span class="number">4K</span>; <span class="comment"># 缓冲(压缩在内存中缓冲几块? 每块多大?)</span></span><br><span class="line">  <span class="attribute">gzip_comp_level</span> <span class="number">6</span>; <span class="comment"># 推荐6 压缩级别(级别越高,压的越小,越浪费CPU计算资源)</span></span><br><span class="line">  <span class="attribute">gzip_min_length</span> <span class="number">1k</span>; <span class="comment"># 开始压缩的最小长度(再小就不要压缩了,意义不在)</span></span><br><span class="line">  <span class="attribute">gzip_types</span> application/javascript text/css text/xml; <span class="comment"># 对哪些类型的文件用压缩 如txt,xml,html ,css</span></span><br><span class="line">  <span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]\."</span>; <span class="comment">#正则匹配UA，配置禁用gzip条件。此处表示ie6及以下不启用gzip（因为ie低版本不支持）</span></span><br><span class="line">  <span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">1</span>; <span class="comment"># 开始压缩的http协议版本(可以不设置,目前几乎全是1.1协议)</span></span><br><span class="line">  <span class="attribute">gzip_vary</span> <span class="literal">on</span>; <span class="comment"># 是否传输gzip压缩标志</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存并重启nginx，刷新页面（为了避免缓存，请强制刷新）就能看到效果了。以谷歌浏览器为例，通过F12看请求的响应头部。</p><h3 id="gzip参数详解"><a href="#gzip参数详解" class="headerlink" title="gzip参数详解"></a>gzip参数详解</h3><h4 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打开或关闭gzip</span></span><br><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>; <span class="comment"># on | off</span></span><br></pre></td></tr></table></figure><p>解释：打开或关闭gzip</p><h4 id="gzip-buffers"><a href="#gzip-buffers" class="headerlink" title="gzip_buffers"></a>gzip_buffers</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置用于处理请求压缩的缓冲区数量和大小</span></span><br><span class="line"><span class="comment"># 比如32 4K表示按照内存页（one memory page）大小以4K为单位（即一个系统中内存页为4K），申请32倍的内存空间。建议此项不设置，使用默认值</span></span><br><span class="line"><span class="attribute">gzip_buffers</span> <span class="number">32</span> <span class="number">4k</span>;</span><br></pre></td></tr></table></figure><h4 id="gzip-comp-level"><a href="#gzip-comp-level" class="headerlink" title="gzip_comp_level"></a>gzip_comp_level</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置gzip压缩级别，取值 1-9</span></span><br><span class="line"><span class="comment"># 值越高越消耗cpu的性能，高并发情况下cpu可能达到100%</span></span><br><span class="line"><span class="comment"># 级别越底压缩速度越快文件压缩比越小，反之速度越慢文件压缩比越大，一般6之后压缩比很难提升</span></span><br><span class="line"><span class="comment"># 一方面，gzip_comp_level 1的压缩能力已经够用。另一方面，压缩一定要和静态资源缓存相结合，缓存压缩后的版本，否则每次都压缩高负载下服务器肯定吃不住。</span></span><br><span class="line"><span class="attribute">gzip_comp_level</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="gzip-disable"><a href="#gzip-disable" class="headerlink" title="gzip_disable"></a>gzip_disable</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表明哪些UA(usergent)头不使用gzip压缩，可以正则</span></span><br><span class="line"><span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]\."</span>;</span><br></pre></td></tr></table></figure><h4 id="gzip-min-length"><a href="#gzip-min-length" class="headerlink" title="gzip_min_length"></a>gzip_min_length</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当返回内容大于此值时才会使用gzip进行压缩,以k为单位,当值为0时，所有页面都进行压缩。</span></span><br><span class="line"><span class="attribute">gzip_min_length</span> <span class="number">1k</span>; <span class="comment"># 100 | 500 | 1k</span></span><br></pre></td></tr></table></figure><h4 id="gzip-http-version"><a href="#gzip-http-version" class="headerlink" title="gzip_http_version"></a>gzip_http_version</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用于识别http协议的版本，早期的浏览器不支持gzip压缩，用户会看到乱码，所以为了支持前期版本加了此选项。默认在http/1.0的协议下不开启gzip压缩。</span></span><br><span class="line"><span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">1</span>; <span class="comment"># 1.0 | 1.1</span></span><br></pre></td></tr></table></figure><h4 id="gzip-proxied"><a href="#gzip-proxied" class="headerlink" title="gzip_proxied"></a>gzip_proxied</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx做为反向代理的时候启用:</span></span><br><span class="line"><span class="comment">#   off – 关闭所有的代理结果数据压缩，默认值</span></span><br><span class="line"><span class="comment">#   expired – 如果header中包含”Expires”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   no-cache – 如果header中包含”Cache-Control:no-cache”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   no-store – 如果header中包含”Cache-Control:no-store”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   private – 如果header中包含”Cache-Control:private”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   no_last_modified – 启用压缩，如果header中包含”Last_Modified”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   no_etag – 启用压缩，如果header中包含“ETag”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   auth – 启用压缩，如果header中包含“Authorization”头信息，启用压缩</span></span><br><span class="line"><span class="comment">#   any – 无条件压缩所有结果数据</span></span><br><span class="line"><span class="attribute">gzip_proxied</span>  <span class="literal">off</span>;</span><br></pre></td></tr></table></figure><h4 id="gzip-vary"><a href="#gzip-vary" class="headerlink" title="gzip_vary"></a>gzip_vary</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 浏览器请求增加响应头"Vary: Accept-Encoding"</span></span><br><span class="line"><span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br></pre></td></tr></table></figure><h4 id="gzip-types"><a href="#gzip-types" class="headerlink" title="gzip_types"></a>gzip_types</h4><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置需要压缩的MIME类型,如果不在设置类型范围内的请求不进行压缩，其中的值可以在 mime.types 文件中找到</span></span><br><span class="line"><span class="comment"># 压缩字体类型 font/ttf font/otf image/svg+xml</span></span><br><span class="line"><span class="attribute">gzip_types</span>  text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;</span><br></pre></td></tr></table></figure><p>这里需要说明一些特殊的类型，使用”字体类型”的资源，而这些资源类型往往会被忽略，且这些资源又比较大，没有被压缩很不合算。（可以参考：<a href="http://www.darrenfang.com/2015/01/setting-up-http-cache-and-gzip-with-nginx/）" target="_blank" rel="noopener">http://www.darrenfang.com/2015/01/setting-up-http-cache-and-gzip-with-nginx/）</a></p><h3 id="开启缓存"><a href="#开启缓存" class="headerlink" title="开启缓存"></a>开启缓存</h3><figure class="highlight nginx"><figcaption><span>website.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 缓存图片</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(ico|gif|jpg|jpeg|png)$</span> &#123; </span><br><span class="line">  <span class="attribute">access_log</span>   <span class="literal">off</span>; </span><br><span class="line">  <span class="attribute">expires</span>      <span class="number">30d</span>; <span class="comment">#根据自己需要修改时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#缓存js、css、视频文件</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(css|js|txt|xml|swf|wav)$</span> &#123;</span><br><span class="line">  <span class="attribute">access_log</span>   <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">expires</span>      <span class="number">24h</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存html类型文件</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(html|htm)$</span> &#123;</span><br><span class="line">  <span class="attribute">expires</span>      <span class="number">1h</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存字体文件，配合gzip更好</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* ^.+\.(eot|ttf|otf|woff|svg)$</span> &#123;</span><br><span class="line">  <span class="attribute">access_log</span>   <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">expires</span> <span class="number">30d</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> gzip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql root账户远程不能登录解决方法</title>
      <link href="/database/mysql-remote-can-not-login/"/>
      <url>/database/mysql-remote-can-not-login/</url>
      
        <content type="html"><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>mysql 远程不能登录一般是没有设置 <em>host</em> 为 <em>%</em> 或者对应的ip地址<br>这种情况下一般是通过修改原来 <em>root</em> 账户的 <em>host</em> 为 <em>%</em> 来进行远程登录，但是这种设置也是有一个缺点，就是某种情况下本地命令行就不能登录了。</p><a id="more"></a><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>所以正确的做法是新创建一个 <em>root</em> 账户，但是 <em>host</em> 为 <em>%</em> 。具体操作为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;12306&#39; WITH GRANT OPTION; -- 12306 是密码</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>这时候在使用远程连接工具登录 <em>root</em> 账户就可以了。<br>总结一下，就是如果需要用户在本地和远程都可以连接，则需要创建两个账户，一个 <em>host</em> 为 <em>localhost</em>;另一个 <em>host</em> 为 <em>%</em>,当然这种方式并不安全，建议两个用户密码不一样</p><h3 id="语句分析"><a href="#语句分析" class="headerlink" title="语句分析"></a>语句分析</h3><ul><li><em>ALL PRIVILEGES</em><br>  表示将所有权限授予给用户。也可指定具体的权限，如：SELECT,CREATE,DROP等。<br>  GRANT SELECT,CREATE,UPDATE,ALTER,DROP ON….</li><li><em>ON</em><br>  表示这些权限对哪些数据库和表生效，格式：数据库名.表名，这里写“*”表示所有数据库，所有表。如果我要指定将权限应用到test库的user表中，可以这么写：test.user</li><li><em>TO</em><br>  将权限授予哪个用户。格式：”用户名”@”登录IP或域名或%”。%表示没有限制，在任何主机都可以登录。比如：”web_user”@”192.168.0.%”,表示web_user这个用户只能在192.168.0IP段登录</li><li><em>IDENTIFIED BY</em><br>  指定用户的登录密码</li><li><em>WITH GRANT OPTION</em><br>  表示允许用户将自己的权限授权给其它用户</li><li><em>flush privileges</em><br>  更新权限信息<br>使用GRANT给用户添加权限，权限会自动叠加，不会覆盖之前授予的权限，比如你先给用户添加一个SELECT权限，后来又给用户添加了一个INSERT权限，那么该用户就同时拥有了SELECT和INSERT权限。</li></ul><p><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html" target="_blank" rel="noopener">详细的权限列表信息</a></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 + Apache 配置https + wss转发</title>
      <link href="/enable-apache-https-and-forward-wss/"/>
      <url>/enable-apache-https-and-forward-wss/</url>
      
        <content type="html"><![CDATA[<h3 id="安装openssl库"><a href="#安装openssl库" class="headerlink" title="安装openssl库"></a>安装openssl库</h3><p>1.检查是否已安装 <code>openssl</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl version -a</span><br><span class="line"><span class="comment"># 打印出下面类似的信息表明已安装</span></span><br><span class="line"><span class="comment"># OpenSSL 1.0.2k-fips  26 Jan 2017.....</span></span><br><span class="line"><span class="comment"># built on: reproducible build, date unspecified</span></span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>如果未安装，可以使用  <code>yum install openssl</code> 或参考其他方式</p></blockquote><p>2.检查apache是否已安装ssl模块</p><blockquote><p>查看  <code>/etc/httpd/conf.d/ssl.conf</code> 文件是否存在，如果不存在 使用命令安装 </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mod_ssl</span><br></pre></td></tr></table></figure><p>3.检查是否已启用apache的 <code>proxy</code>模块</p><blockquote><p>打开 <code>/etc/httpd/conf.modules.d/</code>文件夹，查看是否存在 <code>proxy.conf</code> 文件名(有可能是<code>00-proxy.conf</code>)的文件,如果不存在，可能需要重新编译安装apache，请联系服务器维护人员。如果存在查看时候有一下代码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LoadModule proxy_module modules/mod_proxy.so</span><br><span class="line">LoadModule proxy_http_module modules/mod_proxy_http.so</span><br><span class="line">LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so</span><br><span class="line">LoadModule proxy_connect_module modules/mod_proxy_connect.so</span><br></pre></td></tr></table></figure><p>不存在请联系服务器维护人员</p><h3 id="生成ssl证书"><a href="#生成ssl证书" class="headerlink" title="生成ssl证书"></a>生成ssl证书</h3><p>1.如果没有证书文件，可以创建本地文件测试</p><blockquote><p>输入命令，生成2048位加密私钥 </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out server1.key 2048</span><br></pre></td></tr></table></figure><blockquote><p>然后输入命令，生成证书签名请求（CSR），这里需要填写许多信息，如国家，省市，公司，域名等，<code>域名</code> 必须填写正确，其他可以随便填写</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key server1.key -out server1.csr</span><br></pre></td></tr></table></figure><blockquote><p>最后输入命令，生成类型为X509的自签名证书。有效期设置3650天，即有效期为10年</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -days 3650 -<span class="keyword">in</span> server1.csr -signkey server1.key -out server1.crt</span><br></pre></td></tr></table></figure><blockquote><p>参考文件连接 <a href="https://www.linuxidc.com/Linux/2018-08/153555.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2018-08/153555.htm</a></p></blockquote><p>2.移动证书文件</p><blockquote><p>在 <code>/etc/httpd/</code>文件夹下面创建一个 crt文件夹，将提供的证书文件移动到里面。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxxx.crt <span class="comment"># 证书文件</span></span><br><span class="line">xxxx.key <span class="comment"># 证书秘钥文件</span></span><br></pre></td></tr></table></figure><h3 id="配置ssl"><a href="#配置ssl" class="headerlink" title="配置ssl"></a>配置ssl</h3><blockquote><p>打开 <code>/etc/httpd/conf.d/ssl.conf</code> 文件，找到 <code>&lt;VirtualHost _default_:443&gt;</code> 这一行，在其后面添加</p></blockquote><figure class="highlight apache"><figcaption><span>ssl.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">"/var/www/html"</span> # 指向web的地址，一般不需要修改</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置域名，域名必须和证书的名称一致 </span></span><br><span class="line"><span class="comment"># 例如 aaaa.com  -&gt; ServerName aaaa.com:443</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">ServerName</span></span> www.example.com:443</span><br></pre></td></tr></table></figure><blockquote><p>然后找到 <code>SSLEngine on</code> 这一行代码，在下面添加</p></blockquote><figure class="highlight apache"><figcaption><span>ssl.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">SSLProxyEngine</span> <span class="literal">on</span></span><br><span class="line"><span class="attribute">ProxyRequests</span> <span class="literal">Off</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 转发 streams流</span></span><br><span class="line"><span class="attribute">ProxyPass</span> /streams http://127.0.0.1:6666/streams</span><br><span class="line"><span class="comment"># 状态码302相关</span></span><br><span class="line"><span class="attribute">ProxyPassReverse</span> /streams http://127.0.0.1:6666/streams</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转发wss 协议到 ws协议</span></span><br><span class="line"><span class="attribute">ProxyPass</span> /wss ws://127.0.0.1:8888</span><br><span class="line"><span class="comment"># 状态码302相关</span></span><br><span class="line"><span class="attribute">ProxyPassReverse</span> /wss ws://127.0.0.1:8888</span><br></pre></td></tr></table></figure><blockquote><p>然后找到 <code>SSLHonorCipherOrder on</code>这行代码把前面的 # 号去掉</p></blockquote><blockquote><p>然后找到 <code>SSLCertificateFile /etc/pki/tls/certs/localhost.crt</code> 把里面的文件地址改为证书文件crt文件的地址<code>/etc/httpd/crt/xxxx.crt</code></p></blockquote><blockquote><p>然后找到 <code>SSLCertificateKeyFile /etc/pki/tls/private/localhost.key</code> 把里面的文件地址改为证书秘钥文件key文件的地址<code>/etc/httpd/crt/xxxx.key</code></p></blockquote><blockquote><p>然后保存，重启httpd服务 <code>systemctl restart httpd</code></p></blockquote><hr><details ><summary> <p>配置过的ssl.conf文件 可参考</p> </summary>              <div class='content'>              <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">#</span></span><br><span class="line"><span class="comment"># When we also provide SSL we have to listen to the </span></span><br><span class="line"><span class="comment"># the HTTPS port in addition.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">Listen 443 https</span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">##  SSL Global Context</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">##  All SSL configuration in this context applies both to</span></span><br><span class="line"><span class="comment">##  the main server and all SSL-enabled virtual hosts.</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   Pass Phrase Dialog:</span></span><br><span class="line"><span class="comment">#   Configure the pass phrase gathering process.</span></span><br><span class="line"><span class="comment">#   The filtering dialog program (`builtin' is a internal</span></span><br><span class="line"><span class="comment">#   terminal dialog) has to provide the pass phrase on stdout.</span></span><br><span class="line">SSLPassPhraseDialog <span class="built_in">exec</span>:/usr/libexec/httpd-ssl-pass-dialog</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Inter-Process Session Cache:</span></span><br><span class="line"><span class="comment">#   Configure the SSL Session Cache: First the mechanism </span></span><br><span class="line"><span class="comment">#   to use and second the expiring timeout (in seconds).</span></span><br><span class="line">SSLSessionCache         shmcb:/run/httpd/sslcache(512000)</span><br><span class="line">SSLSessionCacheTimeout  300</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Pseudo Random Number Generator (PRNG):</span></span><br><span class="line"><span class="comment">#   Configure one or more sources to seed the PRNG of the </span></span><br><span class="line"><span class="comment">#   SSL library. The seed data should be of good random quality.</span></span><br><span class="line"><span class="comment">#   WARNING! On some platforms /dev/random blocks if not enough entropy</span></span><br><span class="line"><span class="comment">#   is available. This means you then cannot use the /dev/random device</span></span><br><span class="line"><span class="comment">#   because it would lead to very long connection times (as long as</span></span><br><span class="line"><span class="comment">#   it requires to make more entropy available). But usually those</span></span><br><span class="line"><span class="comment">#   platforms additionally provide a /dev/urandom device which doesn't</span></span><br><span class="line"><span class="comment">#   block. So, if available, use this one instead. Read the mod_ssl User</span></span><br><span class="line"><span class="comment">#   Manual for more details.</span></span><br><span class="line">SSLRandomSeed startup file:/dev/urandom  256</span><br><span class="line">SSLRandomSeed connect <span class="built_in">builtin</span></span><br><span class="line"><span class="comment">#SSLRandomSeed startup file:/dev/random  512</span></span><br><span class="line"><span class="comment">#SSLRandomSeed connect file:/dev/random  512</span></span><br><span class="line"><span class="comment">#SSLRandomSeed connect file:/dev/urandom 512</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Use "SSLCryptoDevice" to enable any supported hardware</span></span><br><span class="line"><span class="comment"># accelerators. Use "openssl engine -v" to list supported</span></span><br><span class="line"><span class="comment"># engine names.  <span class="doctag">NOTE:</span> If you enable an accelerator and the</span></span><br><span class="line"><span class="comment"># server does not start, consult the error logs and ensure</span></span><br><span class="line"><span class="comment"># your accelerator is functioning properly. </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">SSLCryptoDevice <span class="built_in">builtin</span></span><br><span class="line"><span class="comment">#SSLCryptoDevice ubsec</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## SSL Virtual Host Context</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line">&lt;VirtualHost _default_:443&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># General setup for the virtual host, inherited from global configuration</span></span><br><span class="line">DocumentRoot <span class="string">"/var/www/html"</span></span><br><span class="line">ServerName aaaaaaaaaa.com:443</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use separate log files for the SSL virtual host; note that LogLevel</span></span><br><span class="line"><span class="comment"># is not inherited from httpd.conf.</span></span><br><span class="line">ErrorLog logs/ssl_error_log</span><br><span class="line">TransferLog logs/ssl_access_log</span><br><span class="line">LogLevel warn</span><br><span class="line"></span><br><span class="line"><span class="comment">#   SSL Engine Switch:</span></span><br><span class="line"><span class="comment">#   Enable/Disable SSL for this virtual host.</span></span><br><span class="line">SSLEngine on</span><br><span class="line"></span><br><span class="line">SSLProxyEngine on</span><br><span class="line"></span><br><span class="line">ProxyRequests Off</span><br><span class="line"> </span><br><span class="line">ProxyPass /streams http://127.0.0.1:3096/streams</span><br><span class="line"> </span><br><span class="line">ProxyPassReverse /streams http://127.0.0.1:3096/streams</span><br><span class="line"></span><br><span class="line">ProxyPass /wss ws://127.0.0.1:3098</span><br><span class="line"> </span><br><span class="line">ProxyPassReverse /wss ws://127.0.0.1:3098</span><br><span class="line"></span><br><span class="line"><span class="comment">#   SSL Protocol support:</span></span><br><span class="line"><span class="comment"># List the enable protocol levels with which clients will be able to</span></span><br><span class="line"><span class="comment"># connect.  Disable SSLv2 access by default:</span></span><br><span class="line">SSLProtocol all -SSLv2 -SSLv3</span><br><span class="line"></span><br><span class="line"><span class="comment">#   SSL Cipher Suite:</span></span><br><span class="line"><span class="comment">#   List the ciphers that the client is permitted to negotiate.</span></span><br><span class="line"><span class="comment">#   See the mod_ssl documentation for a complete list.</span></span><br><span class="line">SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Speed-optimized SSL Cipher configuration:</span></span><br><span class="line"><span class="comment">#   If speed is your main concern (on busy HTTPS servers e.g.),</span></span><br><span class="line"><span class="comment">#   you might want to force clients to specific, performance</span></span><br><span class="line"><span class="comment">#   optimized ciphers. In this case, prepend those ciphers</span></span><br><span class="line"><span class="comment">#   to the SSLCipherSuite list, and enable SSLHonorCipherOrder.</span></span><br><span class="line"><span class="comment">#   Caveat: by giving precedence to RC4-SHA and AES128-SHA</span></span><br><span class="line"><span class="comment">#   (as in the example below), most connections will no longer</span></span><br><span class="line"><span class="comment">#   have perfect forward secrecy - if the server's key is</span></span><br><span class="line"><span class="comment">#   compromised, captures of past or future traffic must be</span></span><br><span class="line"><span class="comment">#   considered compromised, too.</span></span><br><span class="line"><span class="comment">#SSLCipherSuite RC4-SHA:AES128-SHA:HIGH:MEDIUM:!aNULL:!MD5</span></span><br><span class="line">SSLHonorCipherOrder on </span><br><span class="line"></span><br><span class="line"><span class="comment">#   Server Certificate:</span></span><br><span class="line"><span class="comment"># Point SSLCertificateFile at a PEM encoded certificate.  If</span></span><br><span class="line"><span class="comment"># the certificate is encrypted, then you will be prompted for a</span></span><br><span class="line"><span class="comment"># pass phrase.  Note that a kill -HUP will prompt again.  A new</span></span><br><span class="line"><span class="comment"># certificate can be generated using the genkey(1) command.</span></span><br><span class="line">SSLCertificateFile /etc/httpd/crt/server1.crt</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Server Private Key:</span></span><br><span class="line"><span class="comment">#   If the key is not combined with the certificate, use this</span></span><br><span class="line"><span class="comment">#   directive to point at the key file.  Keep in mind that if</span></span><br><span class="line"><span class="comment">#   you've both a RSA and a DSA private key you can configure</span></span><br><span class="line"><span class="comment">#   both in parallel (to also allow the use of DSA ciphers, etc.)</span></span><br><span class="line">SSLCertificateKeyFile /etc/httpd/crt/server1.key</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Server Certificate Chain:</span></span><br><span class="line"><span class="comment">#   Point SSLCertificateChainFile at a file containing the</span></span><br><span class="line"><span class="comment">#   concatenation of PEM encoded CA certificates which form the</span></span><br><span class="line"><span class="comment">#   certificate chain for the server certificate. Alternatively</span></span><br><span class="line"><span class="comment">#   the referenced file can be the same as SSLCertificateFile</span></span><br><span class="line"><span class="comment">#   when the CA certificates are directly appended to the server</span></span><br><span class="line"><span class="comment">#   certificate for convinience.</span></span><br><span class="line"><span class="comment">#SSLCertificateChainFile /etc/pki/tls/certs/server-chain.crt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   Certificate Authority (CA):</span></span><br><span class="line"><span class="comment">#   Set the CA certificate verification path where to find CA</span></span><br><span class="line"><span class="comment">#   certificates for client authentication or alternatively one</span></span><br><span class="line"><span class="comment">#   huge file containing all of them (file must be PEM encoded)</span></span><br><span class="line"><span class="comment">#SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   Client Authentication (Type):</span></span><br><span class="line"><span class="comment">#   Client certificate verification type and depth.  Types are</span></span><br><span class="line"><span class="comment">#   none, optional, require and optional_no_ca.  Depth is a</span></span><br><span class="line"><span class="comment">#   number which specifies how deeply to verify the certificate</span></span><br><span class="line"><span class="comment">#   issuer chain before deciding the certificate is not valid.</span></span><br><span class="line"><span class="comment">#SSLVerifyClient require</span></span><br><span class="line"><span class="comment">#SSLVerifyDepth  10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   Access Control:</span></span><br><span class="line"><span class="comment">#   With SSLRequire you can do per-directory access control based</span></span><br><span class="line"><span class="comment">#   on arbitrary complex boolean expressions containing server</span></span><br><span class="line"><span class="comment">#   variable checks and other lookup directives.  The syntax is a</span></span><br><span class="line"><span class="comment">#   mixture between C and Perl.  See the mod_ssl documentation</span></span><br><span class="line"><span class="comment">#   for more details.</span></span><br><span class="line"><span class="comment">#&lt;Location /&gt;</span></span><br><span class="line"><span class="comment">#SSLRequire (    %&#123;SSL_CIPHER&#125; !~ m/^(EXP|NULL)/ \</span></span><br><span class="line"><span class="comment">#            and %&#123;SSL_CLIENT_S_DN_O&#125; eq "Snake Oil, Ltd." \</span></span><br><span class="line"><span class="comment">#            and %&#123;SSL_CLIENT_S_DN_OU&#125; in &#123;"Staff", "CA", "Dev"&#125; \</span></span><br><span class="line"><span class="comment">#            and %&#123;TIME_WDAY&#125; &gt;= 1 and %&#123;TIME_WDAY&#125; &lt;= 5 \</span></span><br><span class="line"><span class="comment">#            and %&#123;TIME_HOUR&#125; &gt;= 8 and %&#123;TIME_HOUR&#125; &lt;= 20       ) \</span></span><br><span class="line"><span class="comment">#           or %&#123;REMOTE_ADDR&#125; =~ m/^192\.76\.162\.[0-9]+$/</span></span><br><span class="line"><span class="comment">#&lt;/Location&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   SSL Engine Options:</span></span><br><span class="line"><span class="comment">#   Set various options for the SSL engine.</span></span><br><span class="line"><span class="comment">#   o FakeBasicAuth:</span></span><br><span class="line"><span class="comment">#     Translate the client X.509 into a Basic Authorisation.  This means that</span></span><br><span class="line"><span class="comment">#     the standard Auth/DBMAuth methods can be used for access control.  The</span></span><br><span class="line"><span class="comment">#     user name is the `one line' version of the client's X.509 certificate.</span></span><br><span class="line"><span class="comment">#     Note that no password is obtained from the user. Every entry in the user</span></span><br><span class="line"><span class="comment">#     file needs this password: `xxj31ZMTZzkVA'.</span></span><br><span class="line"><span class="comment">#   o ExportCertData:</span></span><br><span class="line"><span class="comment">#     This exports two additional environment variables: SSL_CLIENT_CERT and</span></span><br><span class="line"><span class="comment">#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the</span></span><br><span class="line"><span class="comment">#     server (always existing) and the client (only existing when client</span></span><br><span class="line"><span class="comment">#     authentication is used). This can be used to import the certificates</span></span><br><span class="line"><span class="comment">#     into CGI scripts.</span></span><br><span class="line"><span class="comment">#   o StdEnvVars:</span></span><br><span class="line"><span class="comment">#     This exports the standard SSL/TLS related `SSL_*' environment variables.</span></span><br><span class="line"><span class="comment">#     Per default this exportation is switched off for performance reasons,</span></span><br><span class="line"><span class="comment">#     because the extraction step is an expensive operation and is usually</span></span><br><span class="line"><span class="comment">#     useless for serving static content. So one usually enables the</span></span><br><span class="line"><span class="comment">#     exportation for CGI and SSI requests only.</span></span><br><span class="line"><span class="comment">#   o StrictRequire:</span></span><br><span class="line"><span class="comment">#     This denies access when "SSLRequireSSL" or "SSLRequire" applied even</span></span><br><span class="line"><span class="comment">#     under a "Satisfy any" situation, i.e. when it applies access is denied</span></span><br><span class="line"><span class="comment">#     and no other module can change it.</span></span><br><span class="line"><span class="comment">#   o OptRenegotiate:</span></span><br><span class="line"><span class="comment">#     This enables optimized SSL connection renegotiation handling when SSL</span></span><br><span class="line"><span class="comment">#     directives are used in per-directory context. </span></span><br><span class="line"><span class="comment">#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire</span></span><br><span class="line">&lt;Files ~ <span class="string">"\.(cgi|shtml|phtml|php3?)$"</span>&gt;</span><br><span class="line">    SSLOptions +StdEnvVars</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line">&lt;Directory <span class="string">"/var/www/cgi-bin"</span>&gt;</span><br><span class="line">    SSLOptions +StdEnvVars</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#   SSL Protocol Adjustments:</span></span><br><span class="line"><span class="comment">#   The safe and default but still SSL/TLS standard compliant shutdown</span></span><br><span class="line"><span class="comment">#   approach is that mod_ssl sends the close notify alert but doesn't wait for</span></span><br><span class="line"><span class="comment">#   the close notify alert from client. When you need a different shutdown</span></span><br><span class="line"><span class="comment">#   approach you can use one of the following variables:</span></span><br><span class="line"><span class="comment">#   o ssl-unclean-shutdown:</span></span><br><span class="line"><span class="comment">#     This forces an unclean shutdown when the connection is closed, i.e. no</span></span><br><span class="line"><span class="comment">#     SSL close notify alert is send or allowed to received.  This violates</span></span><br><span class="line"><span class="comment">#     the SSL/TLS standard but is needed for some brain-dead browsers. Use</span></span><br><span class="line"><span class="comment">#     this when you receive I/O errors because of the standard approach where</span></span><br><span class="line"><span class="comment">#     mod_ssl sends the close notify alert.</span></span><br><span class="line"><span class="comment">#   o ssl-accurate-shutdown:</span></span><br><span class="line"><span class="comment">#     This forces an accurate shutdown when the connection is closed, i.e. a</span></span><br><span class="line"><span class="comment">#     SSL close notify alert is send and mod_ssl waits for the close notify</span></span><br><span class="line"><span class="comment">#     alert of the client. This is 100% SSL/TLS standard compliant, but in</span></span><br><span class="line"><span class="comment">#     practice often causes hanging connections with brain-dead browsers. Use</span></span><br><span class="line"><span class="comment">#     this only for browsers where you know that their SSL implementation</span></span><br><span class="line"><span class="comment">#     works correctly. </span></span><br><span class="line"><span class="comment">#   Notice: Most problems of broken clients are also related to the HTTP</span></span><br><span class="line"><span class="comment">#   keep-alive facility, so you usually additionally want to disable</span></span><br><span class="line"><span class="comment">#   keep-alive for those clients, too. Use variable "nokeepalive" for this.</span></span><br><span class="line"><span class="comment">#   Similarly, one has to force some clients to use HTTP/1.0 to workaround</span></span><br><span class="line"><span class="comment">#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and</span></span><br><span class="line"><span class="comment">#   "force-response-1.0" for this.</span></span><br><span class="line">BrowserMatch <span class="string">"MSIE [2-5]"</span> \</span><br><span class="line">         nokeepalive ssl-unclean-shutdown \</span><br><span class="line">         downgrade-1.0 force-response-1.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#   Per-Server Logging:</span></span><br><span class="line"><span class="comment">#   The home of a custom SSL log file. Use this when you want a</span></span><br><span class="line"><span class="comment">#   compact non-error SSL logfile on a virtual host basis.</span></span><br><span class="line">CustomLog logs/ssl_request_log \</span><br><span class="line">          <span class="string">"%t %h %&#123;SSL_PROTOCOL&#125;x %&#123;SSL_CIPHER&#125;x \"%r\" %b"</span></span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> apache </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos7 </tag>
            
            <tag> apache </tag>
            
            <tag> https </tag>
            
            <tag> wss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忘记 Mysql root账户密码如何修改</title>
      <link href="/database/change-mysql-root-password/"/>
      <url>/database/change-mysql-root-password/</url>
      
        <content type="html"><![CDATA[<h3 id="关闭mysql登录验证"><a href="#关闭mysql登录验证" class="headerlink" title="关闭mysql登录验证"></a>关闭mysql登录验证</h3><p>打开命令行界面 然后输入打开 <em>my.cnf</em> 配置文件的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><a id="more"></a><p>在 [mysqld] 的段中加上一句：skip-grant-tables </p><figure class="highlight plain"><figcaption><span>my.cnf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld] </span><br><span class="line">datadir&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql </span><br><span class="line">socket&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock </span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>然后保存重启mysql </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// mariadb 如果是mysql，则把mariadb改为mysql</span><br><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure><h3 id="无密码登录"><a href="#无密码登录" class="headerlink" title="无密码登录"></a>无密码登录</h3><p>然后登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">// 然后直接回车，要求输入密码的时候也直接回车</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>登录之后选择mysql这个数据库然后修改用户密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;  --选择要操作的数据库</span><br><span class="line">UPDATE user SET password &#x3D; password(&#39;vbox_12306&#39;) WHERE User &#x3D; &#39;root&#39;; -- vbox_12306 为密码</span><br></pre></td></tr></table></figure><p>回车之后显示下面的表示成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br></pre></td></tr></table></figure><p>如果提示下面的错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement</span><br></pre></td></tr></table></figure><h3 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h3><p>则运行一下刷新权限的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>然后在执行上面的 update 命令，执行成功之后再次执行 flush 刷新权限命令</p><h3 id="开启密码登录"><a href="#开启密码登录" class="headerlink" title="开启密码登录"></a>开启密码登录</h3><p>此时退出mysql 再次打开 <em>my.cnf</em> 配置文件 把已开始加入的 skip-grant-tables 删除 :wq 保存 ，然后重启mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure><p>然后安正常步骤登录mysql。</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
